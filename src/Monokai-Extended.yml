.variables:
  GREY:               "#75715E"
  GREY_LIGHT:         "#CFCFC2"
  WHITISH:            "#F8F8F0"
  YELLOW:             "#E6DB74"
  BLUE:               "#66D9EF"
  PURPLE:             "#AE81FF"
  RED:                "#F92672"
  GREEN:              "#A6E22E"
  ORANGE:             "#FD971F"
  ORANGE_LIGHT:       "#E69F66"

  BACKGROUND:         "#272822"
  FOREGROUND:         "#F8F8F2"
  FOREGROUND_CURSOR:  "{{WHITISH}}"

  COMMENT:            "{{GREY}}"
  STRING:             "{{YELLOW}}"
  NUMBER:             "{{PURPLE}}"
  CONSTANT:           "{{PURPLE}}"
  VARIABLE:           "{{WHITISH}}"
  KEYWORD:            "{{RED}}"
  STORAGE:            "{{RED}}"
  TAG_NAME:           "{{RED}}"
  STORAGE_TYPE:       "{{BLUE}}"
  LIBRARY_FUNCTION:   "{{BLUE}}"
  LIBRARY_CONSTANT:   "{{BLUE}}"
  LIBRARY_CLASS:      "{{BLUE}}"
  LIBRARY_TYPE:       "{{BLUE}}"
  LIBRARY_VARIABLE:   "{{BLUE}}"
  ARGUMENT:           "{{ORANGE}}"
  CLASS_NAME:         "{{GREEN}}"
  INHERITED_CLASS:    "{{GREEN}}"
  FUNCTION_NAME:      "{{GREEN}}"
  TAG_ATTRIBUTE:      "{{GREEN}}"
  TEMPLATE_BRAKET:    "{{ORANGE_LIGHT}}"
  STRING_PLACEHOLDER: "{{ORANGE_LIGHT}}"
  DIFF_ADDED:         "{{GREEN}}"
  DIFF_DELETED:       "{{RED}}"
  DIFF_MODIFIED:      "{{PURPLE}}"

name: Monokai Extended
type: dark
colors:
  # Editor
  editor.background:               "{{BACKGROUND}}"
  editorCursor.foreground:         "{{FOREGROUND_CURSOR}}"
  editor.foreground:               "{{FOREGROUND}}"
  editor.lineHighlightBackground:  "#35352b"
  editor.selectionBackground:      "#49483E"
  # Editor whitespace
  editorWhitespace.foreground:     "#6A6A6466"
  # Editor Gutter
  editorGutter.addedBackground:    "{{DIFF_ADDED}}"
  editorGutter.deletedBackground:  "{{DIFF_DELETED}}"
  editorGutter.modifiedBackground: "{{DIFF_MODIFIED}}"
  # Status bar
  statusBar.background:            "#23241F"
  # Activity bar
  activityBar.background:          "#23241F"
  # Side bar
  sideBar.background:              "#252620"
tokenColors:
  - settings:
      background:                "{{BACKGROUND}}"
      foreground:                "{{FOREGROUND}}"
      findHighlight:             "#FFE792"
      findHighlightForeground:   "#000000"
      selectionBorder:           "#222218"
      activeGuide:               "#9D550FB0"
      bracketsForeground:        "#F8F8F2A5"
      bracketsOptions:           underline
      bracketContentsForeground: "#F8F8F2A5"
      bracketContentsOptions:    underline
      tagsOptions:               stippled_underline


  ##############################################################################
  #
  # Common
  #
  ##############################################################################
  # ```ts
  # // Comment
  # /* Multiline comment */
  # ```
  - name: Comment
    scope:
      - comment
    settings:
      foreground: "{{COMMENT}}"

  # ```ts
  # "String"
  # ```
  - name: String
    scope:
      - string
    settings:
      foreground: "{{STRING}}"

  # ```ts
  # 1234
  # 0xFF
  # ```
  - name: Number
    scope:
      - constant.numeric
    settings:
      foreground: "{{NUMBER}}"

  # ```ts
  # true
  # false
  # null
  # undefined
  # NaN
  # ```
  - name: Constant - Built-in
    scope:
      - constant.language
    settings:
      foreground: "{{CONSTANT}}"

  # ```ts
  # //                     v  v
  # "String with constants \n \t"
  # ```
  #
  # ```css
  # body {
  #   /*        v    */
  #   color: #4d4d4d;
  # }
  # ```
  - name: Constant - User-defined
    scope:
      - constant.character
      - constant.other
    settings:
      foreground: "{{CONSTANT}}"

  # ```ts
  # //       v
  # import React from "react"
  # //       v
  # const username = "SuperPaintman"
  # ```
  - name: Variable
    scope:
      - variable
    settings:
      foreground: "{{VARIABLE}}"

  # ```ts
  # // v          v
  # import React from "react"
  # // v
  # export const name = "SuperPaintman"
  # //           v
  # const sam = new Snake("Sammy the Python")
  # ```
  - name: Keyword
    scope:
      - keyword
    settings:
      foreground: "{{KEYWORD}}"

  # ```ts
  # //              v
  # class Header extends Component { }
  #
  # class Animal {
  #   //            v
  #   constructor(public name: string) { }
  # }
  # ```
  - name: Storage
    scope:
      - storage
    settings:
      foreground: "{{STORAGE}}"

  # ```ts
  # // v
  # class Animal {
  #   //   v
  #   constructor(public name: string) { }
  # }
  #
  # // v
  # const sam = new Snake("Sammy the Python");
  #
  # //  v
  # (() => {});
  # ```
  - name: Storage type
    scope:
      - storage.type
    settings:
      foreground: "{{STORAGE_TYPE}}"
      fontStyle:  italic

  # ?
  - name: Class name
    scope:
      - entity.name.class
    settings:
      foreground: "{{CLASS_NAME}}"
      fontStyle:  ""

  # ```ts
  # //                  v
  # class Dog extends Animal { }
  # ```
  - name: Inherited class
    scope:
      - entity.other.inherited-class
    settings:
      foreground: "{{INHERITED_CLASS}}"

  # ```ts
  # //        v
  # function print() { }
  #
  # class Header extends Component {
  #   // v
  #   render() { }
  # }
  #
  # // v
  # print()
  # ```
  - name: Function name
    scope:
      - entity.name.function
    settings:
      foreground: "{{FUNCTION_NAME}}"

  # ```ts
  # //              v
  # function print(arg) { }
  #
  # // v
  # ((name) => {});
  #
  # class Animal {
  #   //                  v
  #   constructor(public name: string) { }
  # }
  # ```
  - name: Function argument
    scope:
      - variable.parameter
    settings:
      foreground: "{{ARGUMENT}}"
      fontStyle:  italic

  # ```html
  # <!--  v         v     v -->
  # <div><h1>Hello</h1></div>
  # ```
  - name: Tag name
    scope:
      - entity.name.tag
    settings:
      foreground: "{{TAG_NAME}}"

  # ```html
  # <!--   v            -->
  # <div class="row">
  #   <!--   v                     -->
  #   <a ui-sref="app.login">Click</a>
  # </div>
  # ```
  - name: Tag attribute
    scope:
      - entity.other.attribute-name
    settings:
      foreground: "{{TAG_ATTRIBUTE}}"

  # ```ts
  # //    v
  # Math.pow(2, 3)
  #
  # //       v
  # console.log("Hi")
  # ```
  - name: Library function
    scope:
      - support.function
    settings:
      foreground: "{{LIBRARY_FUNCTION}}"

  # ```ts
  # // v
  # Math.pow(2, 3)
  #
  # //            v
  # Number.MAX_SAFE_INTEGER
  # ```
  - name: Library constant
    scope:
      - support.constant
    settings:
      foreground: "{{LIBRARY_CONSTANT}}"

  # ```ts
  # // v
  # Error
  #
  # // v
  # console.log("Hi")
  # ```
  - name: Library class
    scope:
      - support.class
    settings:
      foreground: "{{LIBRARY_CLASS}}"
      fontStyle:  italic

  # ```ts
  # class Animal {
  #   //                          v
  #   constructor(public name: string) { }
  # }
  # ```
  - name: Library type
    scope:
      - support.type
    settings:
      foreground: "{{LIBRARY_TYPE}}"
      fontStyle:  italic

  # ```ts
  # __dirname
  # __filename
  # root
  # ```
  - name: Library variable
    scope:
      - support.variable
    settings:
      foreground: "{{LIBRARY_VARIABLE}}"

  # ```ts
  # //      v
  # text.length
  # ```
  - name: Library property
    scope:
      - support.variable.property
    settings:
      foreground: "{{VARIABLE}}"

  # ?
  - name: Invalid
    scope:
      - invalid
    settings:
      background: "{{RED}}"
      foreground: "{{WHITISH}}"

  # ?
  - name: Invalid deprecated
    scope:
      - invalid.deprecated
    settings:
      background: "{{PURPLE}}"
      foreground: "{{WHITISH}}"

  # ```ts
  # const user = {
  #   // v
  #   name: 'SuperPaintman',
  #   //  v
  #   language: 'TypeScript'
  # }
  # ```
  - name: Object Key
    scope:
      - meta.object-literal.key
    settings:
      foreground: "{{YELLOW}}"

  # ```ts
  # const user = {
  #   //  v
  #   name: 'SuperPaintman',
  #   //      v
  #   language: 'TypeScript'
  # }
  # ```
  #
  # ```css
  # body {
  #   /*         v          */
  #   line-height: 1.4em;
  #   /*        v           */
  #   background: #f5f5f5;
  # }
  # ``
  - name: Object Key-Value Separator
    scope:
      - punctuation.separator.key-value
    settings:
      foreground: "{{PURPLE}}"

  # ```ts
  # //    v
  # Number.MAX_SAFE_INTEGER
  #
  # //     v
  # console.log("Hi!")
  # ```
  - name: Punctuation Accessor
    scope:
      - punctuation.accessor
    settings:
      foreground: "{{RED}}"

  # ```ts
  # //                    v                    v
  # console.log(`${this.name} moved ${distanceInMeters}m.`);
  # ```
  - name: Template Expression
    scope:
      - meta.template.expression
    settings:
      foreground: "{{WHITISH}}"

  # ```ts
  # //            v         v        v                v
  # console.log(`${this.name} moved ${distanceInMeters}m.`);
  # ```
  - name: Template Expression Brakets
    scope:
      - punctuation.definition.template-expression.begin
      - punctuation.definition.template-expression.end
    settings:
      foreground: "{{TEMPLATE_BRAKET}}"

  # ?
  - scope:
      - constant.numeric.line-number.find-in-files - match
    settings:

      foreground: "{{alpha PURPLE 0.627}}"

  # ?
  - scope:
      - entity.name.filename.find-in-files
    settings:
      foreground: "{{YELLOW}}"


  ##############################################################################
  #
  # JavaScript / TypeScript / JSX / TSX
  #
  ##############################################################################
  # ```ts
  # class Animal {
  #   constructor() {
  #     // v
  #     this.name = "SuperPaintman"
  #   }
  # }
  # ```
  - name: JavaScript - this
    scope:
      - variable.language.this.ts
      - variable.language.this.js
      - variable.language.this.tsx
      - variable.language.this.jsx
    settings:
      foreground: "{{CONSTANT}}"

  # ```tsx
  # <header className="header">
  #   <h1>todos</h1>
  #   {/*    v           */}
  #   <TodoTextInput newTodo
  #                  onSave={this.handleSave}
  #                  placeholder="What needs to be done?" />
  # </header>
  # ```
  - scope:
      - support.class.component.js
      - support.class.component.jsx
      - support.class.component.ts
      - support.class.component.tsx
    settings:
      foreground: "{{TAG_NAME}}"


  ##############################################################################
  #
  # JSON
  #
  ##############################################################################
  # ```json
  # {
  #   /*             v                */
  #   "name": "monokai-extended",
  #   /*                    v         */
  #   "displayName": "Monokai Extended"
  # }
  # ```
  - name: JSON String
    scope:
      - meta.structure.dictionary.json
      - string.quoted.double.json
    settings:
      foreground: "{{GREY_LIGHT}}"

  # ```json
  # {
  #   /* v                            */
  #   "name": "monokai-extended",
  #   /*    v                         */
  #   "displayName": "Monokai Extended"
  # }
  # ```
  - name: JSON Property
    scope:
      - support.type.property-name.json
    settings:
      foreground: "{{RED}}"
      fontStyle:  ""


  ##############################################################################
  #
  # Clojure / ClojureScript
  #
  ##############################################################################
  # ```clojure
  # ; v
  # (ns my.test)
  # ; v
  # (def get-name [])
  # ```
  - name: Clojure - defs
    scope:
      - keyword.control.clojure
    settings:
      foreground: "{{STORAGE_TYPE}}"

  # ```clojure
  # (ns my.test
  # ;      v                     v
  #   (:require [clojure.test :refer [deftest is]]
  #             anagram))
  # ```
  - name: Clojure - Keyword
    scope:
      - constant.keyword.clojure
    settings:
      foreground: "{{CONSTANT}}"

  # @todo: add chars (\a, \b, \c ...)


  ##############################################################################
  #
  # Go
  #
  ##############################################################################
  # ```go
  # // v
  # func main() {}
  # ```
  - name: Go - func
    scope:
      - keyword.function.go
    settings:
      foreground: "{{STORAGE_TYPE}}"

  # ```go
  # func main() {
  # // v
  #   var i int
  # }
  # ```
  - name: Go - var
    scope:
      - keyword.var.go
    settings:
      foreground: "{{STORAGE_TYPE}}"

  # ```go
  # // v
  # type User struct{}
  # ```
  - name: Go - type
    scope:
      - keyword.type.go
    settings:
      foreground: "{{STORAGE_TYPE}}"

  # ```go
  # //    v
  # user.Save()
  #
  # type Caller interface {
  # // v
  #   Call()
  # }
  # ```
  - name: Go Function
    scope:
      - support.function.go
    settings:
      foreground: "{{FUNCTION_NAME}}"

  # ```go
  # //  v
  # user.Save()
  # ```
  - name: Go Period
    scope:
      - punctuation.other.period.go
    settings:
      foreground: "{{RED}}"

  # ```go
  # //          v
  # fmt.Printf("%d\n", 20)
  # ```
  - name: Go Placeholder
    scope:
      - constant.other.placeholder.go
    settings:
      foreground: "{{STRING_PLACEHOLDER}}"


  ##############################################################################
  #
  # Diff
  #
  ##############################################################################
  # ```diff
  # #  v
  # index 99a08fa..21317e7 100644
  # #  v
  # --- a/src/Monokai-Extended.yml
  # #  v
  # +++ b/src/Monokai-Extended.yml
  # #  v
  # @@ -17,10 +17,11 @@
  #    STRING:             "{{YELLOW}}"
  #    NUMBER:             "{{PURPLE}}"
  #    CONSTANT:           "{{PURPLE}}"
  # ```
  - name: diff.header
    scope:
      - meta.diff
      - meta.diff.header
    settings:
      foreground: "{{GREY}}"

  # ```diff
  # # v
  # -  TYPE:               "{{BLUE}}"
  # +  STORAGE_TYPE:       "{{BLUE}}"
  #    LIBRARY_FUNCTION:   "{{BLUE}}"
  #    LIBRARY_CONSTANT:   "{{BLUE}}"
  #    LIBRARY_CLASS:      "{{BLUE}}"
  # ```
  - name: diff.deleted
    scope:
      - markup.deleted
    settings:
      foreground: "{{DIFF_DELETED}}"

  # ```diff
  # -  TYPE:               "{{BLUE}}"
  # # v
  # +  STORAGE_TYPE:       "{{BLUE}}"
  #    LIBRARY_FUNCTION:   "{{BLUE}}"
  #    LIBRARY_CONSTANT:   "{{BLUE}}"
  #    LIBRARY_CLASS:      "{{BLUE}}"
  # ```
  - name: diff.inserted
    scope:
      - markup.inserted
    settings:
      foreground: "{{DIFF_ADDED}}"

  # ?
  - name: diff.changed
    scope:
      - markup.changed
    settings:
      foreground: "{{DIFF_MODIFIED}}"


  ##############################################################################
  #
  # GitGutter
  #
  ##############################################################################
  - name: GitGutter - deleted
    scope:
      - markup.deleted.git_gutter
    settings:
      foreground: "{{DIFF_DELETED}}"

  - name: GitGutter - inserted
    scope:
      -  markup.inserted.git_gutter
    settings:
      foreground: "{{DIFF_ADDED}}"

  - name: GitGutter - changed
    scope:
      - markup.changed.git_gutter
    settings:
      foreground: "{{DIFF_MODIFIED}}"
